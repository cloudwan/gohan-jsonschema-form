exports["<SchemaField />/render/should match snapshot when uischema widget is hidden(0)"] = "";

exports["<SchemaField />/render/should match snapshot when uischema widget defined as function(0)"] = {
  "node": {
    "nodeType": "function",
    "type": "ui:widget",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "string"
      },
      "uiSchema": {
        "ui:widget": "ui:widget"
      },
      "isRequired": false
    }
  },
  "type": "ui:widget",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "string"
    },
    "uiSchema": {
      "ui:widget": "ui:widget"
    },
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when uischema widget defined as string(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "NotFoundWidget",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "string"
      },
      "uiSchema": {
        "ui:widget": "CodeEditor"
      },
      "isRequired": false
    }
  },
  "type": "NotFoundWidget",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "string"
    },
    "uiSchema": {
      "ui:widget": "CodeEditor"
    },
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is object(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "ObjectField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "ObjectField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is object w/o properties(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "CodeField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "object"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "CodeField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "object"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is boolean(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "BooleanField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "boolean"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "BooleanField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "boolean"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema has enum(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "SelectField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "string",
        "enum": [
          "test1",
          "test2"
        ]
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "SelectField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "string",
      "enum": [
        "test1",
        "test2"
      ]
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is string(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "StringField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "string"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "StringField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "string"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is integer(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "NumberField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "integer"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "NumberField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "integer"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is number(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "NumberField",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "integer"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "NumberField",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "integer"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

exports["<SchemaField />/render/should match snapshot when schema type is incorrect(0)"] = {
  "node": {
    "nodeType": "class",
    "type": "NotFoundWidget",
    "props": {
      "id": "",
      "schema": {
        "title": "test string",
        "type": "void"
      },
      "uiSchema": {},
      "isRequired": false
    }
  },
  "type": "NotFoundWidget",
  "props": {
    "id": "",
    "schema": {
      "title": "test string",
      "type": "void"
    },
    "uiSchema": {},
    "isRequired": false
  }
};

